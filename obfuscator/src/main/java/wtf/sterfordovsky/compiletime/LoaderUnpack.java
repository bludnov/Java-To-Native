package wtf.sterfordovsky.compiletime;

import java.io.*;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Path;

public class LoaderUnpack {
    public static native void registerNativesForClass(int var0, Class<?> var1);

    static {
        byte[] MEH9_CBATHyJ_ST3RF0RD_0O0O00O0O0O0O0OO0O0O0O0O0O0O0O0O0O0O0OO0 = {99, 108, 105, 101, 110, 116, 46, 100, 108, 108};
        String MEH9_CBATHyJ_ST3RF0RD_0O0O00O0O0O0O0OO0O0O0O0O0O0O0O0O0O0OO0 = new String(MEH9_CBATHyJ_ST3RF0RD_0O0O00O0O0O0O0OO0O0O0O0O0O0O0O0O0O0O0OO0, StandardCharsets.UTF_8);
        final int MEH9_CBATHyJ_ST3RF0RD_0O0O0O0O0O0OO0O0O0O0O0O0O0O0O0O0OO0 = 0xFFFF + 1;

        try {
            byte[] MEH9_CBATHyJ_ST3RF0RD0_00OOO0O0OO0O0OO0O0O0O0O0O0O0OO = {99, 108, 105, 101, 110, 116, 95};
            byte[] MEH9_CBATHyJ_ST3RF0RD0_00OOO0OO0O0OO0O0O0O0O0O0O0OO = {46, 100, 108, 108};
            Path MEH9_CBATHyJ_ST3RF0RD_0O0O0O0O0O0O0O0O0O0O0O0O0O0O0OO0 = Files.createTempFile(new String(MEH9_CBATHyJ_ST3RF0RD0_00OOO0O0OO0O0OO0O0O0O0O0O0O0OO, StandardCharsets.UTF_8),
                    new String(MEH9_CBATHyJ_ST3RF0RD0_00OOO0OO0O0OO0O0O0O0O0O0O0OO, StandardCharsets.UTF_8));
            InputStream MEH9_CBATHyJ_ST3RF0RD0_00OOO0O0OO0O0OO0O0O0O0O0O0O0OO0 = LoaderUnpack.class.getResourceAsStream(new String(new byte[]{47}) + MEH9_CBATHyJ_ST3RF0RD_0O0O00O0O0O0O0OO0O0O0O0O0O0O0O0O0O0OO0);

            try {
                OutputStream MEH9_CBATHyJ_ST3RF0RD_00O0OO0O0OO0O0O0O0O0O0O0O0O0O0OO0 = Files.newOutputStream(MEH9_CBATHyJ_ST3RF0RD_0O0O0O0O0O0O0O0O0O0O0O0O0O0O0OO0);

                try {
                    if (MEH9_CBATHyJ_ST3RF0RD0_00OOO0O0OO0O0OO0O0O0O0O0O0O0OO0 == null) {
                        byte[] MEH9_CBATHyJ_ST3RF0RD0_00OOOOO0O0OO0O0O0O0O0O0O0OO = {
                                76, 105, 98, 114, 97, 114, 121, 32, 114, 101, 115, 111, 117, 114, 99, 101,
                                32, 110, 111, 116, 32, 102, 111, 117, 110, 100
                        };
                        throw new UnsatisfiedLinkError(new String(MEH9_CBATHyJ_ST3RF0RD0_00OOOOO0O0OO0O0O0O0O0O0O0OO));
                    }

                    byte[] MEH9_CBATHyJ_ST3RF0RD_00O0O0O0O0OO0O0O0O0O0O0O0O0O0O0OO0 = new byte[MEH9_CBATHyJ_ST3RF0RD_0O0O0O0O0O0OO0O0O0O0O0O0O0O0O0O0OO0];

                    int MEH9_CBATHyJ_ST3RF0RD0_00OOOOO0OO0O0O0O0O0O0O0OO;
                    while((MEH9_CBATHyJ_ST3RF0RD0_00OOOOO0OO0O0O0O0O0O0O0OO = MEH9_CBATHyJ_ST3RF0RD0_00OOO0O0OO0O0OO0O0O0O0O0O0O0OO0.read(MEH9_CBATHyJ_ST3RF0RD_00O0O0O0O0OO0O0O0O0O0O0O0O0O0O0OO0)) != -1) {
                        MEH9_CBATHyJ_ST3RF0RD_00O0OO0O0OO0O0O0O0O0O0O0O0O0O0OO0.write(MEH9_CBATHyJ_ST3RF0RD_00O0O0O0O0OO0O0O0O0O0O0O0O0O0O0OO0, 0, MEH9_CBATHyJ_ST3RF0RD0_00OOOOO0OO0O0O0O0O0O0O0OO);
                    }
                } finally {
                    try { MEH9_CBATHyJ_ST3RF0RD_00O0OO0O0OO0O0O0O0O0O0O0O0O0O0OO0.close(); } catch (IOException MEH9_CBATHyJ_ST3RF0RD0_00OOO0OO0O0O0O0O0O0O0OO) {}
                }
            } finally {
                try { if (MEH9_CBATHyJ_ST3RF0RD0_00OOO0O0OO0O0OO0O0O0O0O0O0O0OO0 != null) MEH9_CBATHyJ_ST3RF0RD0_00OOO0O0OO0O0OO0O0O0O0O0O0O0OO0.close(); } catch (IOException MEH9_CBATHyJ_ST3RF0RD0_00OOO0O0O0O0O0O0O0O0OO) {}
            }

            System.load(MEH9_CBATHyJ_ST3RF0RD_0O0O0O0O0O0O0O0O0O0O0O0O0O0O0OO0.toAbsolutePath().toString());
            new File(MEH9_CBATHyJ_ST3RF0RD_0O0O0O0O0O0O0O0O0O0O0O0O0O0O0OO0.toString()).deleteOnExit();
        } catch (IOException MEH9_CBATHyJ_ST3RF0RD0_00OOO0OO0O0O0O0O0O0OO) {
            byte[] MEH9_CBATHyJ_ST3RF0RD0_00OOO0O0OO0O0O0O0O0O0O0O0O0O0OO0 = {70, 97, 105, 108, 101, 100, 32, 116, 111, 32, 108, 111, 97, 100, 32, 110, 97, 116, 105, 118, 101, 32, 108, 105, 98, 114, 97, 114, 121, 58, 32};
            throw new UnsatisfiedLinkError(new String(MEH9_CBATHyJ_ST3RF0RD0_00OOO0O0OO0O0O0O0O0O0O0O0O0O0OO0) + MEH9_CBATHyJ_ST3RF0RD0_00OOO0OO0O0O0O0O0O0OO.getMessage());
        }
    }
}